// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mpwechat/mpwechat.proto

package mpwechat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Openid     string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Unionid    string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	SessionKey string `protobuf:"bytes,4,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	Nickname   string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Gender     int32  `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Language   string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	City       string `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Province   string `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`
	Country    string `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	// 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），
	// 用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
	AvatarUrl            string   `protobuf:"bytes,11,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	CreatedAt            string   `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_482a5c1294f69966, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *User) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

func (m *User) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *User) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *User) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *User) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *User) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *User) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Request struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_482a5c1294f69966, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Request) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Valid                bool     `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	Errors               []*Error `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_482a5c1294f69966, []int{2}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Token) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_482a5c1294f69966, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "mpwechat.User")
	proto.RegisterType((*Request)(nil), "mpwechat.Request")
	proto.RegisterType((*Token)(nil), "mpwechat.Token")
	proto.RegisterType((*Error)(nil), "mpwechat.Error")
}

func init() { proto.RegisterFile("proto/mpwechat/mpwechat.proto", fileDescriptor_482a5c1294f69966) }

var fileDescriptor_482a5c1294f69966 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0x87, 0x37, 0x69, 0x92, 0xa6, 0x13, 0x58, 0x84, 0x85, 0x90, 0xb5, 0xd2, 0x8a, 0x28, 0x17,
	0x7a, 0x40, 0xbb, 0xd2, 0xf6, 0xcc, 0xa1, 0x07, 0x0e, 0x08, 0x71, 0x89, 0xa8, 0xb8, 0x20, 0x55,
	0x26, 0x1e, 0x5a, 0xab, 0xa9, 0x1d, 0x1c, 0xa7, 0x28, 0x6f, 0xcb, 0xa3, 0x20, 0xff, 0x49, 0x5b,
	0xa4, 0xbd, 0xcd, 0xef, 0xfb, 0xec, 0xcc, 0xc4, 0x36, 0xdc, 0x77, 0x5a, 0x19, 0xf5, 0x78, 0xec,
	0xfe, 0x60, 0xb3, 0x67, 0xe6, 0x5c, 0x3c, 0x38, 0x4e, 0xf2, 0x29, 0x57, 0x7f, 0x63, 0x48, 0x36,
	0x3d, 0x6a, 0x72, 0x0b, 0xb1, 0xe0, 0x34, 0x2a, 0xa3, 0xe5, 0xa2, 0x8e, 0x05, 0x27, 0x6f, 0x21,
	0x53, 0x1d, 0x4a, 0xc1, 0x69, 0xec, 0x58, 0x48, 0x84, 0xc2, 0x7c, 0x90, 0x42, 0x59, 0x31, 0x73,
	0x62, 0x8a, 0xe4, 0x1d, 0x14, 0x3d, 0xf6, 0xbd, 0x50, 0x72, 0x7b, 0xc0, 0x91, 0x26, 0xce, 0x42,
	0x40, 0x5f, 0x70, 0x24, 0x77, 0x90, 0x4b, 0xd1, 0x1c, 0x24, 0x3b, 0x22, 0x4d, 0x9d, 0x3d, 0x67,
	0xdb, 0x6e, 0x87, 0x92, 0xa3, 0xa6, 0x59, 0x19, 0x2d, 0xd3, 0x3a, 0x24, 0xbb, 0xa7, 0x65, 0x72,
	0x37, 0xb0, 0x1d, 0xd2, 0xb9, 0xdf, 0x33, 0x65, 0x42, 0x20, 0x69, 0x84, 0x19, 0x69, 0xee, 0xb8,
	0xab, 0xed, 0xfa, 0x4e, 0xab, 0x93, 0x90, 0x0d, 0xd2, 0x85, 0x5f, 0x3f, 0x65, 0x3b, 0x7a, 0xa3,
	0x06, 0x69, 0xf4, 0x48, 0xc1, 0x8f, 0x1e, 0x22, 0xb9, 0x07, 0x60, 0x27, 0x66, 0x98, 0xde, 0x0e,
	0xba, 0xa5, 0x85, 0x93, 0x0b, 0x4f, 0x36, 0xba, 0xb5, 0xba, 0xd1, 0xc8, 0x0c, 0xf2, 0x2d, 0x33,
	0xf4, 0x85, 0xd7, 0x81, 0xac, 0x8d, 0xd5, 0x43, 0xc7, 0x27, 0xfd, 0xd2, 0xeb, 0x40, 0xd6, 0xa6,
	0x5a, 0xc1, 0xbc, 0xc6, 0xdf, 0x03, 0xf6, 0xc6, 0x4d, 0xac, 0x38, 0x86, 0x63, 0x76, 0x35, 0x79,
	0x03, 0xa9, 0x51, 0x07, 0x94, 0xe1, 0x9c, 0x7d, 0xa8, 0x7e, 0x40, 0xfa, 0xcd, 0x16, 0x17, 0x1d,
	0x5d, 0x69, 0x4b, 0x4f, 0xac, 0x0d, 0x97, 0x93, 0xd7, 0x3e, 0x90, 0xf7, 0x90, 0xa1, 0xd6, 0x4a,
	0xf7, 0x74, 0x56, 0xce, 0x96, 0xc5, 0xd3, 0xab, 0x87, 0xf3, 0xbd, 0x7f, 0xb2, 0xbc, 0x0e, 0xba,
	0xfa, 0x08, 0xa9, 0x03, 0xff, 0x0d, 0x94, 0x86, 0x81, 0x4a, 0x28, 0x38, 0xf6, 0x8d, 0x16, 0x9d,
	0x11, 0x6a, 0x1a, 0xeb, 0x1a, 0x3d, 0x09, 0xc8, 0xbf, 0x76, 0xdf, 0xdd, 0x87, 0xc9, 0x07, 0x48,
	0xd6, 0x83, 0xd9, 0x93, 0xd7, 0x97, 0x5e, 0xe1, 0x6f, 0xef, 0xae, 0xda, 0xbb, 0x7f, 0xa9, 0x6e,
	0xc8, 0x23, 0xe4, 0xf6, 0xb5, 0x7d, 0x96, 0xbf, 0xd4, 0x73, 0x3b, 0x6e, 0x2f, 0xc8, 0x2e, 0xab,
	0x6e, 0x7e, 0x66, 0xee, 0xc1, 0xae, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xee, 0xf1, 0x86,
	0xd1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for MpWechat service

type MpWechatClient interface {
	// 用户验证授权
	Auth(ctx context.Context, in *Request, opts ...client.CallOption) (*Token, error)
	// 获取用户信息
	UserInfo(ctx context.Context, in *Request, opts ...client.CallOption) (*User, error)
}

type mpWechatClient struct {
	c           client.Client
	serviceName string
}

func NewMpWechatClient(serviceName string, c client.Client) MpWechatClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "mpwechat"
	}
	return &mpWechatClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *mpWechatClient) Auth(ctx context.Context, in *Request, opts ...client.CallOption) (*Token, error) {
	req := c.c.NewRequest(c.serviceName, "MpWechat.Auth", in)
	out := new(Token)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mpWechatClient) UserInfo(ctx context.Context, in *Request, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "MpWechat.UserInfo", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MpWechat service

type MpWechatHandler interface {
	// 用户验证授权
	Auth(context.Context, *Request, *Token) error
	// 获取用户信息
	UserInfo(context.Context, *Request, *User) error
}

func RegisterMpWechatHandler(s server.Server, hdlr MpWechatHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&MpWechat{hdlr}, opts...))
}

type MpWechat struct {
	MpWechatHandler
}

func (h *MpWechat) Auth(ctx context.Context, in *Request, out *Token) error {
	return h.MpWechatHandler.Auth(ctx, in, out)
}

func (h *MpWechat) UserInfo(ctx context.Context, in *Request, out *User) error {
	return h.MpWechatHandler.UserInfo(ctx, in, out)
}
